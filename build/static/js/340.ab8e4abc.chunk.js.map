{"version":3,"file":"static/js/340.ab8e4abc.chunk.js","mappings":"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","sources":["Utils/helperFunctions.js","Views/PreLogin/Signin.js"],"sourcesContent":["import { Box, CircularProgress } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nexport const ValidationEngine = {\r\n  EMAIL_REGEX: /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/,\r\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\r\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\r\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\r\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\r\n  type: {\r\n    MANDATORY: 0,\r\n    REGEX: 1,\r\n    CHARACTERCOUNT: 2,\r\n  },\r\n  validate: (validationJSON, data) => {\r\n    function validateMandatory(validationObject, value) {\r\n      if (!value || value === '') {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateCharacterCount(validationObject, value) {\r\n      if (value && value.length !== validationObject.CharacterCout) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateRegex(validationObject, value) {\r\n      if (validationObject.regex && !validationObject.regex.test(value)) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const errors = {};\r\n    let isValid = true;\r\n    let errorObj;\r\n    keys.forEach((key) => {\r\n      const validationArray = validationJSON[key];\r\n      const value = data[key];\r\n      for (const validationObj of validationArray) {\r\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\r\n          errorObj = validateMandatory(validationObj, value);\r\n        } else if (\r\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\r\n        ) {\r\n          errorObj = validateCharacterCount(validationObj, value);\r\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\r\n          errorObj = validateRegex(validationObj, value);\r\n        }\r\n        errors[key] = errorObj.error;\r\n        isValid = isValid && errorObj.isValid;\r\n        if (!errorObj.isValid) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    errors.isValid = isValid;\r\n    return errors;\r\n  },\r\n};\r\n\r\nexport const ErrorMessages = {\r\n  error: (message) =>\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  success: (message) =>\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  info: (message) =>\r\n    toast.info(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n};\r\nexport const Loader = {\r\n  commonLoader() {\r\n    return (\r\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  },\r\n};\r\n\r\nexport const pathFile = {\r\n  dashboards: \"DashBoard\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Box,\r\n  Checkbox,\r\n  Link,\r\n} from \"@mui/material\";\r\nimport { withStyles } from \"@mui/styles\";\r\nimport GoogleIcon from \"@mui/icons-material/Google\";\r\nimport { ValidationEngine} from \"Utils/helperFunctions\"; // Import your validation engine and error messages\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    height: \"100vh\",\r\n    backgroundImage: \"url(/path-to-your-background-image.png)\", // Ensure your image is in the public folder or use the correct path\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"#fff\",\r\n    padding: \"40px\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    margin: \"10px 0\",\r\n  },\r\n  button: {\r\n    margin: \"20px 0\",\r\n  },\r\n  googleButton: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    margin: \"10px 0\",\r\n    textTransform: \"none\",\r\n  },\r\n});\r\nconst validationSchema = {\r\n  email: [\r\n    {\r\n      message: \"Please enter Email\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n    {\r\n      message: \"Please valid Email\",\r\n      type: ValidationEngine.type.REGEX,\r\n      regex: ValidationEngine.EMAIL_REGEX,\r\n    },\r\n  ],\r\n  password: [\r\n    {\r\n      message: \"Please enter Password\",\r\n      type: ValidationEngine.type.MANDATORY,\r\n    },\r\n  ],\r\n};\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      rememberMe: false,\r\n      isSumitted: false,\r\n      errors: {}, // State to hold validation errors\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const val = type === \"checkbox\" ? checked : value;\r\n    this.setState({ [name]: val });\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { email, password } = this.state;\r\n    const error = ValidationEngine.validate(validationSchema, {\r\n      email,\r\n      password,\r\n    });\r\n    return error;\r\n  };\r\n\r\n  handleSignIn = () => {\r\n    const errorData = this.validateForm();\r\n    this.setState({\r\n      isSumitted: true,\r\n    });\r\n    if (errorData.isValid) {\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const errorData = this.validateForm();\r\n    const { classes } = this.props;\r\n    const { email, password, rememberMe, isSumitted } = this.state;\r\n    return (\r\n      <Container className={classes.container}>\r\n        <Box className={classes.box}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Sign in to Rasi Lab\r\n          </Typography>\r\n          <TextField\r\n            className={classes.input}\r\n            label=\"Email\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={this.handleChange}\r\n            error={!errorData.email.isValid && isSumitted}\r\n            helperText={isSumitted ? errorData.email.message : \"\"}\r\n          />\r\n          <TextField\r\n            className={classes.input}\r\n            label=\"Password\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            fullWidth\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={this.handleChange}\r\n            error={!errorData.password.isValid && isSumitted}\r\n            helperText={isSumitted ? errorData.password.message : \"\"}\r\n          />\r\n\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Checkbox\r\n                checked={rememberMe}\r\n                onChange={(event) =>\r\n                  this.setState({ rememberMe: event.target.checked })\r\n                }\r\n              />\r\n              <Typography variant=\"body2\">Remember me</Typography>\r\n            </Box>\r\n            <Link href=\"#\" variant=\"body2\">\r\n              Forgot password?\r\n            </Link>\r\n          </Box>\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            onClick={this.handleSignIn}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Typography variant=\"body2\" gutterBottom>\r\n            Or\r\n          </Typography>\r\n          <Button\r\n            className={`${classes.button} ${classes.googleButton}`}\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            startIcon={<GoogleIcon />}\r\n          >\r\n            Sign up with Google\r\n          </Button>\r\n          <Typography variant=\"body2\">\r\n            Don't have an account? <Link href=\"#\">Sign up Now</Link>\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Signin);\r\n"],"names":["ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","Loader","commonLoader","_jsx","Box","className","children","CircularProgress","validationSchema","email","password","Signin","Component","constructor","props","super","handleChange","event","name","checked","target","val","this","setState","validateForm","state","handleSignIn","errorData","isSumitted","rememberMe","render","classes","Container","container","_jsxs","box","Typography","variant","gutterBottom","TextField","input","label","fullWidth","onChange","helperText","display","justifyContent","alignItems","Checkbox","Link","href","Button","button","color","onClick","concat","googleButton","startIcon","GoogleIcon","withStyles","theme","flexDirection","height","backgroundImage","backgroundSize","backgroundPosition","backgroundColor","padding","borderRadius","boxShadow","textAlign","margin","textTransform"],"sourceRoot":""}