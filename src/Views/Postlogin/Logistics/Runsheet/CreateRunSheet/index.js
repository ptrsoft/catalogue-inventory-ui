import React, { useState } from 'react';
import {
  Button,
  Box,
  Container,
  FormField,
  Header,
  Input,
  Select,
  SpaceBetween,
  ColumnLayout,
  BreadcrumbGroup,
  StatusIndicator,
} from '@cloudscape-design/components';

const CreateRunsheet = () => {
  const [orderIDs, setOrderIDs] = useState(['']); // Initial field
  const [riderName, setRiderName] = useState('');

  const handleOrderIDChange = (index, value) => {
    const newOrderIDs = [...orderIDs];
    newOrderIDs[index] = value;
    setOrderIDs(newOrderIDs);

    // Add new empty input field if the user enters a valid Order ID
    if (value.length > 5 && index === orderIDs.length - 1) {
      setOrderIDs([...newOrderIDs, '']);
    }
  };

  return (
    <Box>
      <SpaceBetween direction="vertical" size="m">
        <BreadcrumbGroup
          items={[
            { text: "Logistics", href: "/app/dashboard" },
            { text: "Runsheet", href: "/app/Logistics/runsheet" },
            { text: "Create RunSheet", href: "/runsheet/view" },
          ]}
          ariaLabel="Breadcrumbs"
        />
              <Header variant="h1">
              Create Runsheet
            </Header>
        <Container
      
        >
          <SpaceBetween size="m">
            <ColumnLayout columns={3} >
              <FormField label="Runsheet No. (Generated by default)">
                <Input value="5425" readOnly disabled />
              </FormField>

              <FormField label="Select Rider Name">
                <Select
                  selectedOption={riderName}
                  onChange={({ detail }) => setRiderName(detail.selectedOption)}
                  options={[
                    { label: 'Santu', value: 'Santu' },
                    { label: 'Other', value: 'Other' }
                  ]}
                  placeholder="Select Rider Name"
                />
              </FormField>
              <Box textAlign="center" float='right' margin={{top:"l"}}>
              <Button variant="primary">Create a Runsheet</Button>
            </Box>
            </ColumnLayout>

           
          </SpaceBetween>
        </Container>

        <Container header={<Header variant="h3">Line of orders</Header>}>
        <table className="custom-table">
      <thead>
        <tr>
          <th style={{ width: "60px", textAlign: "start" }}>S.no</th>
          <th style={{ width: "300px", textAlign: "start" }}>Order ID</th>
        </tr>
      </thead>
      <tbody>
        {orderIDs.map((orderID, index) => (
          <tr key={index}>
            <td>{String(index + 1).padStart(2, '0')}</td>
            <td>
              <Input
                value={orderID}
                onChange={(e) => handleOrderIDChange(index, e.detail.value)}
                placeholder="Enter Order ID"
                ariaLabel={`Order ID ${index + 1}`}
                autoFocus={index === orderIDs.length - 1}
              />
            </td>
            <td>
              {orderID.length > 5 ? (
                <StatusIndicator type="success"></StatusIndicator>
              ) : null}
            </td>
          </tr>
        ))}
      </tbody>
    </table>

        </Container>
      </SpaceBetween>
    </Box>
  );
};

export default CreateRunsheet;
