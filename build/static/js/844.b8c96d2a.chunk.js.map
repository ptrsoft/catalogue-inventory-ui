{"version":3,"file":"static/js/844.b8c96d2a.chunk.js","mappings":"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","sources":["Views/Postlogin/PurchaseOrders/index.js","../node_modules/@cloudscape-design/components/content-layout/styles.css.js","../node_modules/@cloudscape-design/components/content-layout/test-classes/styles.css.js","../node_modules/src/content-layout/internal.tsx","../node_modules/src/internal/hooks/use-dynamic-overlap/index.ts","../node_modules/src/content-layout/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport {ContentLayout,BreadcrumbGroup,Header,Container,ColumnLayout,Box,} from \"@cloudscape-design/components\"\r\nconst PurchaseOrders = () => {\r\n  return (\r\n    <div>   <ContentLayout\r\n    headerVariant=\"high-contrast\"\r\n    defaultPadding\r\n    breadcrumbs={\r\n      <BreadcrumbGroup\r\n        items={[\r\n          { text: \"Purchase Order\", href: \"/app/purchaseOrder\" },\r\n          { text: \"purchase\", href: \"#components\" },\r\n        ]}\r\n        ariaLabel=\"Breadcrumbs\"\r\n      />\r\n    }\r\n    header={\r\n      <Header\r\n        variant=\"h1\"\r\n      >\r\n        Purchase order\r\n      </Header>\r\n    }\r\n  >\r\n    <Container>\r\n      <ColumnLayout columns={4} variant=\"default\" minColumnWidth={120}>\r\n        <div>\r\n          <Box variant=\"awsui-key-label\">\r\n            <p style={{ fontSize: 12 }}>Today's Orders</p>\r\n          </Box>\r\n          <span\r\n            style={{\r\n              fontSize: 40,\r\n              fontWeight: \"1000\",\r\n              lineHeight: 1.3,\r\n              color: \"#037F0C\",\r\n            }}\r\n          >\r\n            1000\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Box variant=\"awsui-key-label\">\r\n            <p style={{ fontSize: 12 }}>Approved Orders</p>\r\n          </Box>\r\n          <span\r\n            style={{\r\n              fontSize: 40,\r\n              fontWeight: \"1000\",\r\n              lineHeight: 1.3,\r\n              color: \"#602400\",\r\n            }}\r\n          >\r\n            800\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Box variant=\"awsui-key-label\">\r\n            <p style={{ fontSize: 12 }}>Declined Orders</p>\r\n          </Box>\r\n          <span\r\n            style={{\r\n              fontSize: 40,\r\n              fontWeight: \"1000\",\r\n              lineHeight: 1.3,\r\n              color: \"#2EA597\",\r\n            }}\r\n          >\r\n            200\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <Box variant=\"awsui-key-label\">\r\n            <p style={{ fontSize: 12 }}>Pending Orders</p>\r\n          </Box>\r\n          <span\r\n            style={{\r\n              fontSize: 40,\r\n              fontWeight: \"1000\",\r\n              lineHeight: 1.3,\r\n              color: \"#56CCF2\",\r\n            }}\r\n          >\r\n            100\r\n          </span>\r\n        </div>\r\n        \r\n      </ColumnLayout>\r\n    </Container>\r\n  </ContentLayout>\r\n  \r\n  \r\n  </div>\r\n  )\r\n}\r\n\r\nexport default PurchaseOrders","\n    import './styles.scoped.css';\n    export default {\n  \"layout\": \"awsui_layout_5gtk3_1hkx1_97\",\n  \"background\": \"awsui_background_5gtk3_1hkx1_111\",\n  \"is-overlap-disabled\": \"awsui_is-overlap-disabled_5gtk3_1hkx1_116\",\n  \"header-background\": \"awsui_header-background_5gtk3_1hkx1_119\",\n  \"notifications\": \"awsui_notifications_5gtk3_1hkx1_123\",\n  \"breadcrumbs\": \"awsui_breadcrumbs_5gtk3_1hkx1_128\",\n  \"default-padding\": \"awsui_default-padding_5gtk3_1hkx1_133\",\n  \"header-wrapper\": \"awsui_header-wrapper_5gtk3_1hkx1_137\",\n  \"with-divider\": \"awsui_with-divider_5gtk3_1hkx1_142\",\n  \"content\": \"awsui_content_5gtk3_1hkx1_145\",\n  \"has-header\": \"awsui_has-header_5gtk3_1hkx1_149\",\n  \"is-visual-refresh\": \"awsui_is-visual-refresh_5gtk3_1hkx1_156\",\n  \"has-default-background\": \"awsui_has-default-background_5gtk3_1hkx1_156\",\n  \"has-notifications\": \"awsui_has-notifications_5gtk3_1hkx1_160\"\n};\n  ","\n    import './styles.scoped.css';\n    export default {\n  \"header\": \"awsui_header_64tge_1scxg_5\",\n  \"secondary-header\": \"awsui_secondary-header_64tge_1scxg_9\",\n  \"notifications\": \"awsui_notifications_64tge_1scxg_13\",\n  \"breadcrumbs\": \"awsui_breadcrumbs_64tge_1scxg_17\"\n};\n  ","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React, { useRef } from 'react';\nimport clsx from 'clsx';\n\nimport { useCurrentMode } from '@cloudscape-design/component-toolkit/internal';\n\nimport InternalGrid from '../grid/internal';\nimport { getBaseProps } from '../internal/base-component';\nimport customCssProps from '../internal/generated/custom-css-properties';\nimport { InternalBaseComponentProps } from '../internal/hooks/use-base-component';\nimport { useDynamicOverlap } from '../internal/hooks/use-dynamic-overlap';\nimport { useMergeRefs } from '../internal/hooks/use-merge-refs';\nimport { useVisualRefresh } from '../internal/hooks/use-visual-mode';\nimport { highContrastHeaderClassName } from '../internal/utils/content-header-utils';\nimport { ContentLayoutProps } from './interfaces';\n\nimport styles from './styles.css.js';\nimport testutilStyles from './test-classes/styles.css.js';\n\ntype InternalContentLayoutProps = ContentLayoutProps & InternalBaseComponentProps;\n\nconst halfGeckoMaxCssLength = ((1 << 30) - 1) / 120;\n// CSS lengths in Gecko are limited to at most (1<<30)-1 app units (Gecko uses 60 as app unit).\n// Limit the maxContentWidth to the half of the upper boundary (â‰ˆ4230^2) to be on the safe side.\n\nexport default function InternalContentLayout({\n  children,\n  disableOverlap,\n  header,\n  headerVariant = 'default',\n  headerBackgroundStyle,\n  __internalRootRef,\n  maxContentWidth = Number.MAX_VALUE,\n  breadcrumbs,\n  notifications,\n  defaultPadding,\n  secondaryHeader,\n  ...rest\n}: InternalContentLayoutProps) {\n  const mainRef = useRef<HTMLDivElement>(null);\n  const mergedRef = useMergeRefs(mainRef, __internalRootRef);\n\n  const baseProps = getBaseProps(rest);\n\n  const isVisualRefresh = useVisualRefresh();\n  const mode = useCurrentMode(mainRef);\n\n  const overlapElement = useDynamicOverlap();\n\n  const isOverlapDisabled = !children || disableOverlap;\n\n  const contentHeaderClassName =\n    headerVariant === 'high-contrast' && isVisualRefresh ? highContrastHeaderClassName : '';\n\n  return (\n    <div\n      {...baseProps}\n      className={clsx(baseProps.className, styles.layout, {\n        [styles['is-overlap-disabled']]: isOverlapDisabled,\n        [styles['is-visual-refresh']]: isVisualRefresh,\n        [styles['has-header']]: !!header,\n        [styles['default-padding']]: !!defaultPadding,\n        [styles['has-notifications']]: !!notifications,\n      })}\n      style={{\n        [customCssProps.contentLayoutMaxContentWidth]:\n          maxContentWidth < Number.MAX_VALUE ? `${maxContentWidth}px` : `${halfGeckoMaxCssLength}px`,\n      }}\n      ref={mergedRef}\n    >\n      <div\n        className={clsx(\n          styles.background,\n          { [styles['has-default-background']]: !headerBackgroundStyle },\n          contentHeaderClassName\n        )}\n        ref={overlapElement}\n      >\n        {headerBackgroundStyle && (\n          <div\n            className={styles['header-background']}\n            style={{\n              background:\n                typeof headerBackgroundStyle === 'function' ? headerBackgroundStyle(mode) : headerBackgroundStyle,\n            }}\n          />\n        )}\n      </div>\n      {notifications && (\n        <div className={clsx(styles.notifications, testutilStyles.notifications, contentHeaderClassName)}>\n          {notifications}\n        </div>\n      )}\n      {breadcrumbs && (\n        <div className={clsx(styles.breadcrumbs, testutilStyles.breadcrumbs, contentHeaderClassName)}>\n          {breadcrumbs}\n        </div>\n      )}\n      {header && !secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], testutilStyles.header, contentHeaderClassName, {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          {header}\n        </div>\n      )}\n      {header && secondaryHeader && (\n        <div\n          className={clsx(styles['header-wrapper'], {\n            [styles['with-divider']]: headerVariant === 'divider',\n          })}\n        >\n          <InternalGrid gridDefinition={[{ colspan: { default: 12, xs: 9 } }, { colspan: { default: 12, xs: 3 } }]}>\n            <div className={clsx(testutilStyles.header, contentHeaderClassName)}>{header}</div>\n            <div className={testutilStyles['secondary-header']}>{secondaryHeader}</div>\n          </InternalGrid>\n        </div>\n      )}\n\n      <div\n        className={clsx(styles.content, {\n          [styles['with-divider']]: headerVariant === 'divider',\n        })}\n      >\n        {children}\n      </div>\n    </div>\n  );\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { useContext, useLayoutEffect } from 'react';\nimport { useCallback, useRef } from 'react';\n\nimport { ContainerQueryEntry } from '@cloudscape-design/component-toolkit';\nimport { useResizeObserver } from '@cloudscape-design/component-toolkit/internal';\n\nimport { DynamicOverlapContext } from '../../context/dynamic-overlap-context';\n\nexport interface UseDynamicOverlapProps {\n  /**\n   * Disables hook if not needed. By default, `false`.\n   */\n  disabled?: boolean;\n}\n\n/**\n * Observes the height of an element referenced by the returning ref and sets the value as overlapping\n * height for the surrounding AppLayout component.\n * @param props.disabled disables hook if not applicable\n * @returns ref to be measured as overlapping height\n */\nexport function useDynamicOverlap(props?: UseDynamicOverlapProps) {\n  const disabled = props?.disabled ?? false;\n  const setDynamicOverlapHeight = useContext(DynamicOverlapContext);\n  const overlapElementRef = useRef(null);\n\n  const getElement = useCallback(() => overlapElementRef.current, [overlapElementRef]);\n  const updateState = useCallback(\n    (entry: ContainerQueryEntry) => {\n      if (!disabled) {\n        setDynamicOverlapHeight(entry.contentBoxHeight);\n      }\n    },\n    [disabled, setDynamicOverlapHeight]\n  );\n\n  useResizeObserver(getElement, updateState);\n\n  useLayoutEffect(\n    function handleDynamicOverlapHeight() {\n      // Set overlap height back to 0 when unmounting\n      return () => {\n        if (!disabled) {\n          setDynamicOverlapHeight(0);\n        }\n      };\n    },\n    [disabled, setDynamicOverlapHeight]\n  );\n\n  return overlapElementRef;\n}\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport React from 'react';\n\nimport useBaseComponent from '../internal/hooks/use-base-component';\nimport { applyDisplayName } from '../internal/utils/apply-display-name';\nimport { ContentLayoutProps } from './interfaces';\nimport InternalContentLayout from './internal';\n\nexport { ContentLayoutProps };\n\nexport default function ContentLayout(props: ContentLayoutProps) {\n  const baseComponentProps = useBaseComponent('ContentLayout', {\n    props: { disableOverlap: props.disableOverlap },\n  });\n  return <InternalContentLayout {...props} {...baseComponentProps} />;\n}\n\napplyDisplayName(ContentLayout, 'ContentLayout');\n"],"names":["PurchaseOrders","_jsxs","children","_jsx","ContentLayout","headerVariant","defaultPadding","breadcrumbs","BreadcrumbGroup","items","text","href","ariaLabel","header","Header","variant","Container","ColumnLayout","columns","minColumnWidth","Box","style","fontSize","fontWeight","lineHeight","color","halfGeckoMaxCssLength","InternalContentLayout","_a","disableOverlap","headerBackgroundStyle","__internalRootRef","maxContentWidth","Number","MAX_VALUE","notifications","secondaryHeader","rest","__rest","mainRef","useRef","mergedRef","useMergeRefs","baseProps","getBaseProps","isVisualRefresh","useVisualRefresh","mode","useCurrentMode","overlapElement","props","disabled","setDynamicOverlapHeight","useContext","DynamicOverlapContext","overlapElementRef","getElement","useCallback","current","updateState","entry","contentBoxHeight","useResizeObserver","useLayoutEffect","useDynamicOverlap","isOverlapDisabled","contentHeaderClassName","highContrastHeaderClassName","React","Object","assign","className","clsx","styles","layout","customCssProps","contentLayoutMaxContentWidth","concat","ref","background","testutilStyles","InternalGrid","gridDefinition","colspan","default","xs","content","baseComponentProps","useBaseComponent","applyDisplayName"],"sourceRoot":""}