{"version":3,"file":"static/js/923.2aa6aa37.chunk.js","mappings":"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","sources":["CommonData/index.js","Utils/helperFunctions.js","Views/Postlogin/Customers/index.js"],"sourcesContent":["export const API_ERROR_MESSAGE = \"There is some error.\";\r\n\r\nexport const NO_DATA_FOUND = \"There are no data available.\";\r\n\r\nexport const TABLE_STATUS = {\r\n  approved: \"approved\",\r\n  under_review: \"under_review\",\r\n  pending: \"pending\",\r\n  deleted: \"deleted\",\r\n  rejected: \"rejected\",\r\n};\r\n\r\nexport const TABLE_VEGAN = {\r\n  vegan: \"vegan\",\r\n  non_vegan: \"non_vegan\",\r\n};\r\nexport const QUOTATIONS_FILTER_STATUS = {\r\n  APPROVED: \"Approved\",\r\n  UNDER_REVIEW: \"Under Review\",\r\n  REJECTED: \"Rejected\",\r\n  PENDING: \"Pending\",\r\n  DELETED: \"Deleted\",\r\n  FAVOURITE_CUSTOMER:\"Favourite Customer\",\r\n  NEW_CUSTOMER:\"New Customer\"\r\n};\r\n\r\n\r\n","import { Box, CircularProgress } from \"@mui/material\";\r\nimport { toast } from \"react-toastify\";\r\nexport const ValidationEngine = {\r\n  EMAIL_REGEX: /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/,\r\n  PASSWORD_REGEX: /^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,}$/,\r\n  MOBILE_NUMBER_REGEX: /^\\d{10}$/,\r\n  NUMBER_ONLY_REGEX: /^[0-9]+$/,\r\n  DECIMAL_ALLOW_REGEX: /^\\d*\\.?\\d*$/,\r\n  ONLY_TWO_DECIMAL_ALLOW_REGEX: /^(?:\\d*\\.\\d{1,2}|\\d+)$/,\r\n  type: {\r\n    MANDATORY: 0,\r\n    REGEX: 1,\r\n    CHARACTERCOUNT: 2,\r\n  },\r\n  validate: (validationJSON, data) => {\r\n    function validateMandatory(validationObject, value) {\r\n      if (!value || value === '') {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateCharacterCount(validationObject, value) {\r\n      if (value && value.length !== validationObject.CharacterCout) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    function validateRegex(validationObject, value) {\r\n      if (validationObject.regex && !validationObject.regex.test(value)) {\r\n        return {\r\n          isValid: false,\r\n          error: {\r\n            isValid: false,\r\n            message: validationObject.message,\r\n          },\r\n        };\r\n      }\r\n      return {\r\n        isValid: true,\r\n        error: {\r\n          isValid: true,\r\n          message: \"\",\r\n        },\r\n      };\r\n    }\r\n\r\n    const keys = Object.keys(data);\r\n    const errors = {};\r\n    let isValid = true;\r\n    let errorObj;\r\n    keys.forEach((key) => {\r\n      const validationArray = validationJSON[key];\r\n      const value = data[key];\r\n      for (const validationObj of validationArray) {\r\n        if (validationObj.type === ValidationEngine.type.MANDATORY) {\r\n          errorObj = validateMandatory(validationObj, value);\r\n        } else if (\r\n          validationObj.type === ValidationEngine.type.CHARACTERCOUNT\r\n        ) {\r\n          errorObj = validateCharacterCount(validationObj, value);\r\n        } else if (validationObj.type === ValidationEngine.type.REGEX) {\r\n          errorObj = validateRegex(validationObj, value);\r\n        }\r\n        errors[key] = errorObj.error;\r\n        isValid = isValid && errorObj.isValid;\r\n        if (!errorObj.isValid) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n    errors.isValid = isValid;\r\n    return errors;\r\n  },\r\n};\r\n\r\nexport const ErrorMessages = {\r\n  error: (message) =>\r\n    toast.error(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  success: (message) =>\r\n    toast.success(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n  info: (message) =>\r\n    toast.info(message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"colored\",\r\n    }),\r\n};\r\nexport const Loader = {\r\n  commonLoader() {\r\n    return (\r\n      <Box className=\"d-flex align-items-center justify-content-center common-loader\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  },\r\n};\r\n\r\nexport const pathFile = {\r\n  dashboards: \"DashBoard\",\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport { connect } from \"react-redux\";\r\nimport status from \"Redux-Store/Constants\";\r\nimport { fetchCustomers } from \"Redux-Store/Customers/CustomersThunk\";\r\nimport { Loader } from \"Utils/helperFunctions\";\r\nimport GridTableWithPagination from \"../Components/GridTableWithPagination\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TablesHeaderFilters from \"Views/Postlogin/Components/TablesHeaderFilters\";\r\nimport { QUOTATIONS_FILTER_STATUS } from \"CommonData\";\r\nconst columns = [\r\n  {\r\n    field: \"customer_name\",\r\n    headerName: \"Customer Name\",\r\n    width: 150,\r\n    renderCell: (params) => <Link to={params.value}>{params.value}</Link>,\r\n  },\r\n  {\r\n    field: \"email\",\r\n    headerName: \"Email\",\r\n    width: 180,\r\n    renderCell: (data) => {\r\n      return data.value;\r\n    },\r\n  },\r\n  {\r\n    field: \"shipping_address\",\r\n    headerName: \"Shipping Address\",\r\n    width: 250,\r\n    renderCell: (data) => {\r\n      return data.value;\r\n    },\r\n  },\r\n  {\r\n    field: \"added_by\",\r\n    headerName: \"Added By\",\r\n    width: 130,\r\n    renderCell: (data) => {\r\n      return data.value;\r\n    },\r\n  },\r\n  {\r\n    field: \"added_on\",\r\n    headerName: \"Added On\",\r\n    width: 180,\r\n    renderCell: (data) => {\r\n      return data.value;\r\n    },\r\n  },\r\n  {\r\n    field: \"last_order\",\r\n    headerName: \"Last Order\",\r\n    width: 180,\r\n    renderCell: (data) => {\r\n      return data.value;\r\n    },\r\n  },\r\n  {\r\n    field: \"actions\",\r\n    headerName: \"Actions\",\r\n    width: 240,\r\n  \r\n    renderCell: (data) => {\r\n      return (\r\n        <div className=\"table-btns\">\r\n          <Button className=\"primary-outline\" variant=\"primary\">\r\n            View More {data.value}\r\n          </Button>\r\n          <Button className=\"primary\" variant=\"primary\">\r\n            Create Quotes\r\n          </Button>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nlet { FAVOURITE_CUSTOMER, NEW_CUSTOMER } =\r\n  QUOTATIONS_FILTER_STATUS;\r\n\r\nconst filterItems = [\r\n  {\r\n    label: \"All\",\r\n  },\r\n  {\r\n    label: FAVOURITE_CUSTOMER,\r\n  },\r\n  {\r\n    label: NEW_CUSTOMER,\r\n  },\r\n \r\n];\r\n\r\nclass Customers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      customersData: [],\r\n      selectedFilters: [],\r\n      paginationDetails: { pageSize: 10, page: 0 },\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchCustomers();\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevProps.customers.status !== this.props.customers.status &&\r\n      this.props.customers.status === status.SUCCESS &&\r\n      this.props.customers?.data\r\n    ) {\r\n      this.manipulationData(this.props.customers?.data.customers || []);\r\n    }\r\n  }\r\n  manipulationData(data, searchData = \"\", isApply = 0) {\r\n    let { customersData, selectedFilters } = this.state;\r\n    customersData = [];\r\n    if (data?.length) {\r\n      let customers = JSON.parse(JSON.stringify(data));\r\n      if (searchData) {\r\n        customers = data.filter((tableData) => {\r\n          if (\r\n            tableData?.customer_name\r\n              .toLowerCase()\r\n              .includes(searchData.toLowerCase()) ||\r\n            tableData?.added_by\r\n              .toLowerCase()\r\n              .includes(searchData.toLowerCase()) ||\r\n            tableData?.added_on\r\n              .toLowerCase()\r\n              .includes(searchData.toLowerCase()) ||\r\n            tableData?.email.toLowerCase().includes(searchData.toLowerCase()) ||\r\n            tableData?.last_order\r\n              .toLowerCase()\r\n              .includes(searchData.toLowerCase()) ||\r\n            tableData?.shipping_address\r\n              .toLowerCase()\r\n              .includes(searchData.toLowerCase())\r\n          ) {\r\n            return true;\r\n          } else {\r\n            return null;\r\n          }\r\n        });\r\n      }\r\n      if (isApply) {\r\n        customers = customers.filter((tableData) => {\r\n          return selectedFilters.includes(\r\n            tableData.status.toLowerCase().replace(\" \", \"_\")\r\n          );\r\n        });\r\n      } else {\r\n        selectedFilters = [];\r\n      }\r\n\r\n      customers.forEach((customers) => {\r\n        customersData.push({\r\n          ...customers,\r\n          statusClass: customers?.status?.toLowerCase()?.replace(\" \", \"_\"),\r\n        });\r\n      });\r\n    }\r\n    this.setState({ customersData, searchData, selectedFilters });\r\n  }\r\n  render() {\r\n    const {\r\n      customersData,\r\n      paginationDetails: { page, pageSize },\r\n      searchData,\r\n      selectedFilters,\r\n    } = this.state;\r\n    const startDataNo = page * pageSize + 1;\r\n    const endDataNo = page * pageSize + pageSize;\r\n    return (\r\n      <Box className=\"main-container\">\r\n        <Box className=\"qutations-container\">\r\n          <TablesHeaderFilters\r\n            details={{\r\n              header: \"Customers\",\r\n              filterLabel: \"\",\r\n              exportCsv: \"Export as CSV\",\r\n              importCsv: \"Import\",\r\n              isOnlySearchVisible: false,\r\n              btnLabel: \"Customers\",\r\n\r\n              dataLength: customersData.length,\r\n              searchData,\r\n              dataRange: customersData.length ? (\r\n                <>\r\n                  <strong>\r\n                    {startDataNo} -{endDataNo}\r\n                  </strong>\r\n                </>\r\n              ) : (\r\n                0\r\n              ),\r\n              filter: {\r\n                label: \"Filters\",\r\n                data: filterItems,\r\n                header: \"Status\",\r\n                selectedFilters,\r\n              },\r\n            }}\r\n            handleSearch={(searchData) => {\r\n              this.manipulationData(\r\n                this.props.customers?.data.customers || [],\r\n                searchData\r\n              );\r\n            }}\r\n            handleFilters={(label, prevFilters) => {\r\n              let { selectedFilters } = this.state;\r\n              if (prevFilters) {\r\n                selectedFilters = prevFilters;\r\n              } else {\r\n                if (selectedFilters.includes(label)) {\r\n                  if (label === \"all\") {\r\n                    selectedFilters = [];\r\n                  } else {\r\n                    selectedFilters = selectedFilters.filter(\r\n                      (item) => ![label, \"all\"].includes(item)\r\n                    );\r\n                  }\r\n                } else {\r\n                  if (label === \"all\") {\r\n                    selectedFilters = filterItems.map((item) =>\r\n                      item.label.toLowerCase().replace(\" \", \"_\")\r\n                    );\r\n                  } else {\r\n                    selectedFilters.push(label);\r\n                  }\r\n                }\r\n              }\r\n              console.log(selectedFilters, prevFilters);\r\n              this.setState({ selectedFilters });\r\n            }}\r\n            applyOrCancelFilter={(isApply) => {\r\n              this.manipulationData(\r\n                this.props.quotations?.data.quotations || [],\r\n                searchData,\r\n                isApply ? 1 : 0\r\n              );\r\n            }}\r\n          />\r\n\r\n          {this.props.customers.status === status.IN_PROGRESS ? (\r\n            Loader.commonLoader()\r\n          ) : (\r\n            <GridTableWithPagination\r\n              details={{\r\n                paginationDetails: { page, pageSize },\r\n                pagSize: 10,\r\n                data: customersData,\r\n                columns,\r\n                checkboxSelection: true,\r\n              }}\r\n              handlePageChange={(paginationDetails) => {\r\n                this.setState({ paginationDetails });\r\n              }}\r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  const { customers } = state.customers;\r\n  return { customers };\r\n}\r\n\r\nconst mapDispatchToProps = { fetchCustomers };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);\r\n"],"names":["TABLE_VEGAN","vegan","non_vegan","QUOTATIONS_FILTER_STATUS","APPROVED","UNDER_REVIEW","REJECTED","PENDING","DELETED","FAVOURITE_CUSTOMER","NEW_CUSTOMER","ValidationEngine","EMAIL_REGEX","PASSWORD_REGEX","MOBILE_NUMBER_REGEX","NUMBER_ONLY_REGEX","DECIMAL_ALLOW_REGEX","ONLY_TWO_DECIMAL_ALLOW_REGEX","type","MANDATORY","REGEX","CHARACTERCOUNT","validate","validationJSON","data","validateMandatory","validationObject","value","isValid","error","message","validateCharacterCount","length","CharacterCout","validateRegex","regex","test","keys","Object","errors","errorObj","forEach","key","validationArray","validationObj","Loader","commonLoader","_jsx","Box","className","children","CircularProgress","columns","field","headerName","width","renderCell","params","Link","to","_jsxs","Button","variant","filterItems","label","Customers","Component","constructor","props","super","componentDidMount","this","fetchCustomers","state","customersData","selectedFilters","paginationDetails","pageSize","page","componentDidUpdate","prevProps","prevState","_this$props$customers","_this$props$customers2","customers","status","SUCCESS","manipulationData","searchData","arguments","undefined","isApply","JSON","parse","stringify","filter","tableData","customer_name","toLowerCase","includes","added_by","added_on","email","last_order","shipping_address","replace","_customers$status","_customers$status$toL","push","statusClass","setState","render","startDataNo","endDataNo","TablesHeaderFilters","details","header","filterLabel","exportCsv","importCsv","isOnlySearchVisible","btnLabel","dataLength","dataRange","_Fragment","handleSearch","_this$props$customers3","handleFilters","prevFilters","item","map","console","log","applyOrCancelFilter","_this$props$quotation","quotations","IN_PROGRESS","GridTableWithPagination","pagSize","checkboxSelection","handlePageChange","mapDispatchToProps","connect"],"sourceRoot":""}